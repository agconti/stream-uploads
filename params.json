{"name":"Stream-uploads","tagline":"A node.js package that allows you to easily stream uploads to s3","body":"# stream-uploads\r\n[![Build Status](https://travis-ci.org/agconti/stream-uploads.svg?branch=master)](https://travis-ci.org/agconti/stream-uploads)\r\n[![npm version](https://badge.fury.io/js/stream-uploads.svg)](http://badge.fury.io/js/stream-uploads)\r\n\r\nA node.js package that allows you to easily stream uploads to s3\r\n\r\n## Install\r\n\r\n```bash\r\nnpm install stream-uploads\r\n```\r\n\r\n## Usage\r\n\r\nSimply attach the provided router and start accpeting streaming uploads at `'/uploads'`\r\n```js\r\nconst app = require('express')()\r\nconst streamingUploadsRouter = require('./routes')\r\n\r\napp.use(streamingUploadsRouter)\r\n\r\napp.listen(3000)\r\n```\r\n\r\n\r\nOr make your own custom implementation using the `uploadHandeler` middleware:\r\n```js\r\nconst express = require('express')\r\nconst app = express()\r\nconst uploadHandler = require('stream-uploads').uploadHandler\r\nconst async = require('async')\r\n\r\n\r\napp.post('/upload', uploadHandler, (req, res) => {\r\n\r\n\t// Do stuff here ...\r\n\r\n}\r\n```\r\n\r\n\r\n### uploadHandeler\r\n##### An Express.js route middleware that reports errors of attempted uploads to s3 to the client.\r\n* @param {object} err -- uploading file error\r\n* @param {object} req\r\n* @param {object} res\r\n* @param {function} next\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}